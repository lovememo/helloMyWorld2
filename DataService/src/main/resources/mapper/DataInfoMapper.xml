<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 指定工作空间，要与接口名相同，源代码没有去看，猜测应该是通过"这里的namespace.下边方法的id"来定位方法的 -->
<mapper namespace="com.opm.data.dtl.mapper.DtlMapper">
    <insert id="saveFile" parameterType="com.opm.data.dtl.model.DtlFile">
        insert into OPM_DTL_FILE_ARCHIVE_INF(SERIAL_NO,FILE_CONTENT,FILE_NAME) values
        (#{serialNo},#{fileContent},#{fileName})
    </insert>

    <insert id="registerDtlInfo" parameterType="com.opm.data.dtl.model.DtlControl">
        <selectKey resultType="java.lang.String" keyProperty="serialNo" order="BEFORE">
            SELECT SEQ_NO.nextval FROM dual
        </selectKey>
        insert into OPM_DTL_CTRL_INF
        (
        SERIAL_NO,
        DTL_ITEM_ID,
        DTL_STATUS,
        START_TIME,
        END_TIME
        )
        values(
        #{serialNo},
        #{dtlItemId},
        #{dtlStatus},
        #{invokeTime},
        NULL
        )
    </insert>

    <!-- UPDATE START -->
    <!-- 更新数据处理状态 -->
    <update id="updateDtlInfo" parameterType="com.opm.data.dtl.model.DtlControl">
        UPDATE OPM_DTL_CTRL_INF
        <set>
            <if test="dtlStatus != null and dtlStatus != ''">DTL_STATUS = #{dtlStatus}</if>
            <if test="returnTime != null ">,END_TIME = #{returnTime}</if>
        </set>
        WHERE SERIAL_NO = #{serialNo}
    </update>
    <!-- UPDATE END -->
    <!-- UPDATE START -->
    <!-- 更新数据处理数据状态 -->
    <update id="updateDtlDataInfo" parameterType="com.opm.data.dtl.model.DtlData">
        UPDATE OPM_DTL_DATA_INF T
        <set>
            <if test="status != null and status != ''">T.STATUS = #{status}</if>
            <if test="status == null or status == ''">T.STATUS = T.STATUS</if>
        </set>
        WHERE T.SERIAL_NO = #{serialNo}
        <![CDATA[
            AND T.STATUS <> #{status}
        ]]>
    </update>
    <!-- UPDATE END -->

    <!-- MAPPING START -->
    <resultMap id="fileInfoModel" type="com.opm.data.dtl.model.DtlFile">
        <result column="SERIAL_NO" property="serialNo"></result>
        <result column="FILE_CONTENT" property="fileContent"></result>
        <result column="FILE_NAME" property="fileName"></result>
        <result column="FILE_SIZE" property="fileSize"></result>
    </resultMap>
    <!-- MAPPING END -->

    <!-- MAPPING START -->
    <resultMap id="dtlItemModel" type="com.opm.data.dtl.model.DtlItem">
        <result column="DTL_ITEM_ID" property="dtlItemId"></result>
        <result column="FILE_NAME" property="fileName"></result>
        <result column="STATUS" property="status"></result>
        <result column="VERSION" property="version"></result>
        <result column="DIRECTION" property="direction"></result>
        <result column="REMARK" property="remark"></result>
        <result column="CHARSET" property="charset"></result>
        <result column="PARTITION" property="partition"></result>
        <result column="HEADER_RULE_ID" property="headerRuleId"></result>
        <result column="BODY_RULE_ID" property="bodyRuleId"></result>
    </resultMap>
    <!-- MAPPING END -->
    <!-- SELECT START -->
    <select id="queryDtlItem" resultMap="dtlItemModel" parameterType="com.opm.data.dtl.model.DtlControl" >
        SELECT A.ID      AS DTL_ITEM_ID,
        A.NAME           AS FILE_NAME,
        A.STATUS         AS STATUS,
        A.VERSION        AS VERSION,
        A.DIRECTION      AS DIRECTION,
        A.REMARK         AS REMARK,
        B.CHARSET        AS CHARSET,
        B.PARTITION      AS PARTITION,
        B.HEADER_RULE_ID AS HEADER_RULE_ID,
        B.BODY_RULE_ID   AS BODY_RULE_ID
        FROM OPM_DTL_ITEM_INF A
        INNER JOIN OPM_DTL_FILE_INF B
        ON A.ID = B.DTL_ITEM_ID
        INNER JOIN OPM_DTL_CTRL_INF C
        ON A.ID = C.DTL_ITEM_ID
        WHERE NVL(#{serialNo}, C.SERIAL_NO) = C.SERIAL_NO
        AND NVL(#{dtlItemId}, A.ID) = A.ID
        <![CDATA[ AND ROWNUM < 2 ]]>
    </select>
    <!-- SELECT END -->

    <!-- SELECT START -->
    <select id="readFile" resultMap="fileInfoModel" parameterType="com.opm.data.dtl.model.DtlControl">
        SELECT FILE_CONTENT, FILE_NAME, SERIAL_NO, NVL(LENGTH(T.FILE_CONTENT), 0) / 1024 AS FILE_SIZE
        FROM OPM_DTL_FILE_ARCHIVE_INF T
        WHERE SERIAL_NO = #{serialNo}
    </select>
    <!-- SELECT END -->

    <select id="queryFileUploadedList" resultMap="fileInfoModel" parameterType="String">
        SELECT A.SERIAL_NO, A.FILE_NAME, A.FILE_SIZE
        FROM (SELECT ROWNUM AS ROW_NUM,
        T.SERIAL_NO,
        T.FILE_NAME,
        NVL(LENGTH(T.FILE_CONTENT), 0) / 1024 AS FILE_SIZE
        FROM OPM_DTL_FILE_ARCHIVE_INF T WHERE T.SERIAL_NO = #{serialNo}) A
        WHERE A.ROW_NUM >= #{beginPos, jdbcType=INTEGER}
        <![CDATA[
            AND A.ROW_NUM < #{beginPos, jdbcType=INTEGER} + #{fetchNum, jdbcType=INTEGER}
        ]]>
    </select>

    <select id="queryFileUploadedListTotalNum" resultType="java.lang.String" parameterType="String">
        SELECT COUNT(1) AS TOTAL_NUM FROM OPM_DTL_FILE_ARCHIVE_INF T WHERE T.SERIAL_NO = #{serialNo}
    </select>

    <select id="queryProcessedDataCount" resultType="Integer" parameterType="String">
        SELECT COUNT(1) AS TOTAL_NUM
        FROM OPM_DTL_DATA_INF T
        WHERE T.SERIAL_NO = #{serialNo}
        AND T.CHECK_FLAG = 'Y'
        AND T.STATUS = 'Y'
    </select>





</mapper>